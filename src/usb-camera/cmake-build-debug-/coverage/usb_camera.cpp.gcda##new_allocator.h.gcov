        -:    0:Source:/usr/include/c++/11/ext/new_allocator.h
        -:    0:Graph:/home/dcy/ENG/ENG2025/src/usb-camera/cmake-build-debug-/CMakeFiles/usb_camera.dir/src/usb_camera.cpp.gcno
        -:    0:Data:/home/dcy/ENG/ENG2025/src/usb-camera/cmake-build-debug-/CMakeFiles/usb_camera.dir/src/usb_camera.cpp.gcda
        -:    0:Runs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file ext/new_allocator.h
        -:   26: *  This file is a GNU extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _NEW_ALLOCATOR_H
        -:   30:#define _NEW_ALLOCATOR_H 1
        -:   31:
        -:   32:#include <bits/c++config.h>
        -:   33:#include <new>
        -:   34:#include <bits/functexcept.h>
        -:   35:#include <bits/move.h>
        -:   36:#if __cplusplus >= 201103L
        -:   37:#include <type_traits>
        -:   38:#endif
        -:   39:
        -:   40:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   41:{
        -:   42:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   43:
        -:   44:  /**
        -:   45:   *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
        -:   46:   *  @ingroup allocators
        -:   47:   *
        -:   48:   *  This is precisely the allocator defined in the C++ Standard.
        -:   49:   *    - all allocation calls operator new
        -:   50:   *    - all deallocation calls operator delete
        -:   51:   *
        -:   52:   *  @tparam  _Tp  Type of allocated object.
        -:   53:   */
        -:   54:  template<typename _Tp>
        -:   55:    class new_allocator
        -:   56:    {
        -:   57:    public:
        -:   58:      typedef _Tp        value_type;
        -:   59:      typedef std::size_t     size_type;
        -:   60:      typedef std::ptrdiff_t  difference_type;
        -:   61:#if __cplusplus <= 201703L
        -:   62:      typedef _Tp*       pointer;
        -:   63:      typedef const _Tp* const_pointer;
        -:   64:      typedef _Tp&       reference;
        -:   65:      typedef const _Tp& const_reference;
        -:   66:
        -:   67:      template<typename _Tp1>
        -:   68:	struct rebind
        -:   69:	{ typedef new_allocator<_Tp1> other; };
        -:   70:#endif
        -:   71:
        -:   72:#if __cplusplus >= 201103L
        -:   73:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   74:      // 2103. propagate_on_container_move_assignment
        -:   75:      typedef std::true_type propagate_on_container_move_assignment;
        -:   76:#endif
        -:   77:
        -:   78:      _GLIBCXX20_CONSTEXPR
     136*:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg6Image_ISaIvEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg6Image_ISaIvEEEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEEC2Ev called 11 returned 100% blocks executed 100%
       11:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEEC2Ev called 11 returned 100% blocks executed 100%
       11:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIbEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIhEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIhEC2Ev called 34 returned 100% blocks executed 100%
       34:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIdEC2Ev called 40 returned 100% blocks executed 100%
       40:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2Ev:
function _ZN9__gnu_cxx13new_allocatorImEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sEC2Ev:
function _ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sEC2Ev:
function _ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sEC2Ev:
function _ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEEC2Ev called 4 returned 100% blocks executed 100%
        4:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIcEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISaIcEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2Ev called 1 returned 100% blocks executed 100%
        1:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2Ev called 0 returned 0% blocks executed 0%
    #####:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIvEEC2Ev:
function _ZN9__gnu_cxx13new_allocatorISaIvEEC2Ev called 2 returned 100% blocks executed 100%
        2:   79:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   80:
        -:   81:      _GLIBCXX20_CONSTEXPR
      58*:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEEC2ERKS9_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEEC2ERKS9_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIlEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ called 16 returned 100% blocks executed 100%
       16:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_:
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEEC2ERKS6_:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEEC2ERKS6_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEEC2ERKS6_:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEEC2ERKS6_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEEC2ERKS3_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEEC2ERKS3_ called 12 returned 100% blocks executed 100%
       12:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEEC2ERKSC_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEEC2ERKSC_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEEC2ERKS6_:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEEC2ERKS6_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sEC2ERKS2_:
function _ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sEC2ERKS2_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEEC2ERKS9_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEEC2ERKS9_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEEC2ERKS3_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEEC2ERKS3_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIvEEC2ERKS2_:
function _ZN9__gnu_cxx13new_allocatorISaIvEEC2ERKS2_ called 6 returned 100% blocks executed 100%
        6:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEEC2ERKSC_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2ERKSZ_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2ERKSZ_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2ERKSZ_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEEC2ERKSZ_ called 3 returned 100% blocks executed 100%
        3:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIcEEC2ERKS2_:
function _ZN9__gnu_cxx13new_allocatorISaIcEEC2ERKS2_ called 6 returned 100% blocks executed 100%
        6:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sEC2ERKS2_:
function _ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sEC2ERKS2_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sEC2ERKS2_:
function _ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sEC2ERKS2_ called 0 returned 0% blocks executed 0%
    #####:   82:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   83:
        -:   84:      template<typename _Tp1>
        -:   85:	_GLIBCXX20_CONSTEXPR
        -:   86:	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   87:
        -:   88:#if __cplusplus <= 201703L
     605*:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIbED2Ev:
function _ZN9__gnu_cxx13new_allocatorIbED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg6Image_ISaIvEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg6Image_ISaIvEEEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEED2Ev called 11 returned 100% blocks executed 100%
       11:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEED2Ev called 11 returned 100% blocks executed 100%
       11:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEED2Ev called 15 returned 100% blocks executed 100%
       15:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9ParameterEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9ParameterEED2Ev called 1 returned 100% blocks executed 100%
        1:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIdED2Ev:
function _ZN9__gnu_cxx13new_allocatorIdED2Ev called 138 returned 100% blocks executed 100%
      138:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIlED2Ev:
function _ZN9__gnu_cxx13new_allocatorIlED2Ev called 82 returned 100% blocks executed 100%
       82:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorImED2Ev:
function _ZN9__gnu_cxx13new_allocatorImED2Ev called 82 returned 100% blocks executed 100%
       82:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev called 83 returned 100% blocks executed 100%
       83:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIhED2Ev:
function _ZN9__gnu_cxx13new_allocatorIhED2Ev called 116 returned 100% blocks executed 100%
      116:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIcED2Ev:
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sED2Ev:
function _ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sED2Ev:
function _ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sED2Ev:
function _ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEED2Ev called 2 returned 100% blocks executed 100%
        2:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIcEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISaIcEED2Ev called 8 returned 100% blocks executed 100%
        8:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEED2Ev called 0 returned 0% blocks executed 0%
    #####:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorISaIvEED2Ev:
function _ZN9__gnu_cxx13new_allocatorISaIvEED2Ev called 8 returned 100% blocks executed 100%
        8:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEED2Ev:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEED2Ev called 4 returned 100% blocks executed 100%
        4:   89:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
------------------
        -:   90:
        -:   91:      pointer
        -:   92:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   93:      { return std::__addressof(__x); }
        -:   94:
        -:   95:      const_pointer
        -:   96:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   97:      { return std::__addressof(__x); }
        -:   98:#endif
        -:   99:
        -:  100:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:  101:      // about what the return value is when __n == 0.
        -:  102:      _GLIBCXX_NODISCARD _Tp*
      70*:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
      70*:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    #####:  116:	      std::__throw_bad_array_new_length();
    #####:  117:	    std::__throw_bad_alloc();
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
      70*:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv called 16 returned 100% blocks executed 83%
       16:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       16:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       16:  111-block  0
call    0 returned 16
branch  1 taken 0 (fallthrough)
branch  2 taken 16
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
        -:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
        -:  116:	      std::__throw_bad_array_new_length();
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       16:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       16:  127-block  0
call    0 returned 16
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv called 40 returned 100% blocks executed 62%
       40:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
       40:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
       40:  111-block  0
call    0 returned 40
branch  1 taken 0 (fallthrough)
branch  2 taken 40
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
       40:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
       40:  127-block  0
call    0 returned 40
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
        -:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
        -:  116:	      std::__throw_bad_array_new_length();
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE8allocateEmPKv called 2 returned 100% blocks executed 62%
        2:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        2:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        2:  111-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        2:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  127-block  0
call    0 returned 2
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIlE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv called 2 returned 100% blocks executed 62%
        2:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        2:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        2:  111-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        2:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  127-block  0
call    0 returned 2
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 2 returned 100% blocks executed 62%
        2:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        2:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        2:  111-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        2:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  127-block  0
call    0 returned 2
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 1 returned 100% blocks executed 62%
        1:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        1:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        1:  111-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        1:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        1:  127-block  0
call    0 returned 1
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 2 returned 100% blocks executed 62%
        2:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
        2:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
        2:  111-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
        2:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
        2:  127-block  0
call    0 returned 2
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEE8allocateEmPKv called 0 returned 0% blocks executed 0%
    #####:  103:      allocate(size_type __n, const void* = static_cast<const void*>(0))
        -:  104:      {
        -:  105:#if __cplusplus >= 201103L
        -:  106:	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  107:	 // 3308. std::allocator<void>().allocate(n)
        -:  108:	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
        -:  109:#endif
        -:  110:
    #####:  111:	if (__builtin_expect(__n > this->_M_max_size(), false))
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  112:	  {
        -:  113:	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  114:	    // 3190. allocator::allocate sometimes returns too little storage
    #####:  115:	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    %%%%%:  115-block  0
branch  0 never executed
branch  1 never executed
    #####:  116:	      std::__throw_bad_array_new_length();
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:	    std::__throw_bad_alloc();
    %%%%%:  117-block  0
call    0 never executed
        -:  118:	  }
        -:  119:
        -:  120:#if __cpp_aligned_new
        -:  121:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  122:	  {
        -:  123:	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
        -:  124:	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
        -:  125:	  }
        -:  126:#endif
    #####:  127:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
    %%%%%:  127-block  0
call    0 never executed
        -:  128:      }
------------------
        -:  129:
        -:  130:      // __p is not permitted to be a null pointer.
        -:  131:      void
      78*:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
      78*:  145:	::operator delete(__p
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE10deallocateEPS9_m:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE10deallocateEPS9_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm:
function _ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm called 24 returned 100% blocks executed 100%
       24:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       24:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       24:  145:	::operator delete(__p
       24:  145-block  0
call    0 returned 24
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm:
function _ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m:
function _ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm:
function _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm:
function _ZN9__gnu_cxx13new_allocatorIlE10deallocateEPlm called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm:
function _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm called 44 returned 100% blocks executed 100%
       44:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
       44:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
       44:  145:	::operator delete(__p
       44:  145-block  0
call    0 returned 44
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9ParameterEE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9ParameterEE10deallocateEPS2_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEE10deallocateEPS2_m:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp13QosPolicyKindEE10deallocateEPS2_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg19FloatingPointRange_ISaIvEEEE10deallocateEPS5_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorIN14rcl_interfaces3msg13IntegerRange_ISaIvEEEE10deallocateEPS5_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m:
function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE10deallocateEPSB_m:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE10deallocateEPSB_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS5_EELPv0EEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEE10deallocateEPS9_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN11sensor_msgs3msg11CameraInfo_ISaIvEEESaIS6_ELNS_12_Lock_policyE2EEE10deallocateEPS9_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE10deallocateEPSC_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE10deallocateEPSC_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI36rmw_offered_deadline_missed_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE10deallocateEPSC_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EESaIS9_ELNS_12_Lock_policyE2EEE10deallocateEPSC_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEE10deallocateEPSH_m:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN6rclcpp12experimental19IntraProcessManagerEZNS2_7Context15get_sub_contextIS4_JEEESt10shared_ptrIT_EDpOT0_EUlS5_E_SaIvELNS_12_Lock_policyE2EEE10deallocateEPSH_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKmSt8weak_ptrIN6rclcpp12experimental28SubscriptionIntraProcessBaseEEELb0EEEE10deallocateEPSB_m:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKmSt8weak_ptrIN6rclcpp12experimental28SubscriptionIntraProcessBaseEEELb0EEEE10deallocateEPSB_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEE10deallocateEPS6_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp5ClockESaIS3_ELNS_12_Lock_policyE2EEE10deallocateEPS6_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIvESaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m called 2 returned 100% blocks executed 100%
        2:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        2:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        2:  145:	::operator delete(__p
        2:  145-block  0
call    0 returned 2
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEESaISC_ELNS_12_Lock_policyE2EEE10deallocateEPSF_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE10deallocateEPS12_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE10deallocateEPS12_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE10deallocateEPS12_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN6rclcpp15QOSEventHandlerIZNS2_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES8_EC4EPNS2_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS2_3QoSERKNS2_29PublisherOptionsWithAllocatorIS8_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEESaISZ_ELNS_12_Lock_policyE2EEE10deallocateEPS12_m called 1 returned 100% blocks executed 100%
        1:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        1:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        1:  145:	::operator delete(__p
        1:  145-block  0
call    0 returned 1
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceISaIcESaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m called 2 returned 100% blocks executed 100%
        2:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
        2:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
        2:  145:	::operator delete(__p
        2:  145-block  0
call    0 returned 2
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE10deallocateEPSB_m:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE10deallocateEPSB_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI35rmw_qos_incompatible_event_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m:
function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceI28rmw_liveliness_lost_status_sSaIS2_ELNS_12_Lock_policyE2EEE10deallocateEPS5_m called 0 returned 0% blocks executed 0%
    #####:  132:      deallocate(_Tp* __p, size_type __t __attribute__ ((__unused__)))
    %%%%%:  132-block  0
        -:  133:      {
        -:  134:#if __cpp_aligned_new
        -:  135:	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
        -:  136:	  {
        -:  137:	    ::operator delete(__p,
        -:  138:# if __cpp_sized_deallocation
        -:  139:			      __t * sizeof(_Tp),
        -:  140:# endif
        -:  141:			      std::align_val_t(alignof(_Tp)));
        -:  142:	    return;
        -:  143:	  }
        -:  144:#endif
    #####:  145:	::operator delete(__p
    %%%%%:  145-block  0
call    0 never executed
        -:  146:#if __cpp_sized_deallocation
        -:  147:			  , __t * sizeof(_Tp)
        -:  148:#endif
        -:  149:			 );
        -:  150:      }
------------------
        -:  151:
        -:  152:#if __cplusplus <= 201703L
        -:  153:      size_type
       2*:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
       2*:  155:      { return _M_max_size(); }
------------------
_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv called 2 returned 100% blocks executed 100%
        2:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
        2:  155:      { return _M_max_size(); }
        2:  155-block  0
call    0 returned 2
------------------
_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv:
function _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv called 0 returned 0% blocks executed 0%
    #####:  154:      max_size() const _GLIBCXX_USE_NOEXCEPT
    #####:  155:      { return _M_max_size(); }
    %%%%%:  155-block  0
call    0 never executed
------------------
        -:  156:
        -:  157:#if __cplusplus >= 201103L
        -:  158:      template<typename _Up, typename... _Args>
        -:  159:	void
      12*:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
      12*:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerIZNS7_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEESJ_EC4EPNS7_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS7_3QoSERKNS7_29PublisherOptionsWithAllocatorISJ_EEEUlR35rmw_qos_incompatible_event_status_sE_S6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerIZNS7_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEESJ_EC4EPNS7_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS7_3QoSERKNS7_29PublisherOptionsWithAllocatorISJ_EEEUlR35rmw_qos_incompatible_event_status_sE_S6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_ called 1 returned 100% blocks executed 100%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE9constructIS5_JRKS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE9constructIS5_JRS5_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE9constructIS5_JRS5_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE9constructISB_JS7_S9_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISt19_Sp_counted_deleterIPN11sensor_msgs3msg11CameraInfo_ISaIvEEESt14default_deleteIS6_ES5_LNS_12_Lock_policyE2EEE9constructISB_JS7_S9_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEE9constructISB_JRKNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEES9_St10shared_ptrINS1_7ContextEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEE9constructISB_JRKNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEES9_St10shared_ptrINS1_7ContextEEEEEvPT_DpOT0_ called 1 returned 100% blocks executed 64%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  162-block  1
call    8 returned 1
    $$$$$:  162-block  2
call    9 never executed
    $$$$$:  162-block  3
call   10 never executed
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEE9constructIS8_JRPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS6_EEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEE9constructIS8_JRPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS6_EEEEEvPT_DpOT0_ called 1 returned 100% blocks executed 89%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS5_EESF_IJEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE9constructIS8_JRKSt21piecewise_construct_tSt5tupleIJRS5_EESF_IJEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
    $$$$$:  162-block  3
    $$$$$:  162-block  4
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEE9constructIS8_JRPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS6_EEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEE9constructIS8_JRPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS6_EEEEEvPT_DpOT0_ called 1 returned 100% blocks executed 89%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  162-block  1
    $$$$$:  162-block  2
call    8 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEE9constructIS2_J16rcl_clock_type_eEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEE9constructIS2_J16rcl_clock_type_eEEEvPT_DpOT0_ called 1 returned 100% blocks executed 83%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  162-block  1
    $$$$$:  162-block  2
call    5 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEES6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
------------------
_ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerIZNS7_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEESJ_EC4EPNS7_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS7_3QoSERKNS7_29PublisherOptionsWithAllocatorISJ_EEEUlR35rmw_qos_incompatible_event_status_sE_S6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE9constructISA_JS3_IS4_S6_INS7_15QOSEventHandlerIZNS7_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEESJ_EC4EPNS7_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS7_3QoSERKNS7_29PublisherOptionsWithAllocatorISJ_EEEUlR35rmw_qos_incompatible_event_status_sE_S6_I15rcl_publisher_sEEEEEEEEvPT_DpOT0_ called 1 returned 100% blocks executed 100%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorISaIvEE9constructIS1_JEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISaIvEE9constructIS1_JEEEvPT_DpOT0_ called 2 returned 100% blocks executed 100%
        2:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        2:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        2:  162-block  0
call    0 returned 2
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  162-block  1
call    9 never executed
    $$$$$:  162-block  2
call   10 never executed
    $$$$$:  162-block  3
call   11 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  162-block  1
call    9 never executed
    $$$$$:  162-block  2
call   10 never executed
    $$$$$:  162-block  3
call   11 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEE9constructISB_JRKS7_RFiP11rcl_event_sPKS9_26rcl_publisher_event_type_eERSA_RKSK_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  162-block  1
call    9 never executed
    $$$$$:  162-block  2
call   10 never executed
    $$$$$:  162-block  3
call   11 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE9constructISY_JRKSU_RFiP11rcl_event_sPKSW_26rcl_publisher_event_type_eERSX_RKS17_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE9constructISY_JRKSU_RFiP11rcl_event_sPKSW_26rcl_publisher_event_type_eERSX_RKS17_EEEvPT_DpOT0_ called 1 returned 100% blocks executed 71%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  162-block  1
call    9 returned 1
    $$$$$:  162-block  2
call   10 never executed
    $$$$$:  162-block  3
call   11 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE9constructISY_JRKSU_RFiP11rcl_event_sPKSW_26rcl_publisher_event_type_eERSX_RKS17_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE9constructISY_JRKSU_RFiP11rcl_event_sPKSW_26rcl_publisher_event_type_eERSX_RKS17_EEEvPT_DpOT0_ called 1 returned 100% blocks executed 71%
        1:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        1:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        1:  162-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  162-block  1
call    9 returned 1
    $$$$$:  162-block  2
call   10 never executed
    $$$$$:  162-block  3
call   11 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISaIcEE9constructIS1_JRSaIvEEEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorISaIcEE9constructIS1_JRSaIvEEEEvPT_DpOT0_ called 2 returned 100% blocks executed 100%
        2:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
        2:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
        2:  162-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
------------------
_ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
_ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_:
function _ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sE9constructIS1_JRS1_EEEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  160:	construct(_Up* __p, _Args&&... __args)
        -:  161:	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
    #####:  162:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    %%%%%:  162-block  0
call    0 never executed
call    1 never executed
------------------
        -:  163:
        -:  164:      template<typename _Up>
        -:  165:	void
      10*:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
      10*:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR36rmw_offered_deadline_missed_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE7destroyISA_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIK26rcl_publisher_event_type_eSt10shared_ptrIN6rclcpp19QOSEventHandlerBaseEEELb0EEEE7destroyISA_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt10type_indexSt10shared_ptrIvEELb0EEEE7destroyIS8_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKmSt8weak_ptrIN6rclcpp12experimental28SubscriptionIntraProcessBaseEEELb0EEEE7destroyISA_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKmSt8weak_ptrIN6rclcpp12experimental28SubscriptionIntraProcessBaseEEELb0EEEE7destroyISA_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorISaIcEE7destroyIS1_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISaIcEE7destroyIS1_EEvPT_ called 2 returned 100% blocks executed 100%
        2:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        2:  168:	{ __p->~_Up(); }
        2:  168-block  0
call    0 returned 2
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE7destroyISY_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE7destroyISY_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE7destroyISY_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerIZNS1_9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES7_EC4EPNS1_15node_interfaces17NodeBaseInterfaceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS1_3QoSERKNS1_29PublisherOptionsWithAllocatorIS7_EEEUlR35rmw_qos_incompatible_event_status_sE_St10shared_ptrI15rcl_publisher_sEEEE7destroyISY_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR35rmw_qos_incompatible_event_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp15QOSEventHandlerISt8functionIFvR28rmw_liveliness_lost_status_sEESt10shared_ptrI15rcl_publisher_sEEEE7destroyISB_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sE7destroyIS1_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorI35rmw_qos_incompatible_event_status_sE7destroyIS1_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorISaIvEE7destroyIS1_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorISaIvEE7destroyIS1_EEvPT_ called 2 returned 100% blocks executed 100%
        2:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        2:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEE7destroyIS2_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp5ClockEE7destroyIS2_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg11CameraInfo_ISaIvEEES6_EEE7destroyIS8_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEE7destroyIS8_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9PublisherIN11sensor_msgs3msg6Image_ISaIvEEES6_EEE7destroyIS8_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE7destroyIS5_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN11sensor_msgs3msg11CameraInfo_ISaIvEEEE7destroyIS5_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
    %%%%%:  168-block  0
call    0 never executed
------------------
_ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEE7destroyISB_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorIN6rclcpp9WallTimerISt5_BindIFM10usb_cameraFvvEPS4_EELPv0EEEE7destroyISB_EEvPT_ called 1 returned 100% blocks executed 100%
        1:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
        1:  168:	{ __p->~_Up(); }
        1:  168-block  0
call    0 returned 1
------------------
_ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sE7destroyIS1_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorI36rmw_offered_deadline_missed_status_sE7destroyIS1_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
_ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sE7destroyIS1_EEvPT_:
function _ZN9__gnu_cxx13new_allocatorI28rmw_liveliness_lost_status_sE7destroyIS1_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  166:	destroy(_Up* __p)
        -:  167:	noexcept(std::is_nothrow_destructible<_Up>::value)
    #####:  168:	{ __p->~_Up(); }
------------------
        -:  169:#else
        -:  170:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  171:      // 402. wrong new expression in [some_] allocator::construct
        -:  172:      void
        -:  173:      construct(pointer __p, const _Tp& __val)
        -:  174:      { ::new((void *)__p) _Tp(__val); }
        -:  175:
        -:  176:      void
        -:  177:      destroy(pointer __p) { __p->~_Tp(); }
        -:  178:#endif
        -:  179:#endif // ! C++20
        -:  180:
        -:  181:      template<typename _Up>
        -:  182:	friend _GLIBCXX20_CONSTEXPR bool
        -:  183:	operator==(const new_allocator&, const new_allocator<_Up>&)
        -:  184:	_GLIBCXX_NOTHROW
        -:  185:	{ return true; }
        -:  186:
        -:  187:#if __cpp_impl_three_way_comparison < 201907L
        -:  188:      template<typename _Up>
        -:  189:	friend _GLIBCXX20_CONSTEXPR bool
        -:  190:	operator!=(const new_allocator&, const new_allocator<_Up>&)
        -:  191:	_GLIBCXX_NOTHROW
        -:  192:	{ return false; }
        -:  193:#endif
        -:  194:
        -:  195:    private:
        -:  196:      _GLIBCXX_CONSTEXPR size_type
      72*:  197:      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
        -:  198:      {
        -:  199:#if __PTRDIFF_MAX__ < __SIZE_MAX__
      72*:  200:	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
        -:  201:#else
        -:  202:	return std::size_t(-1) / sizeof(_Tp);
        -:  203:#endif
        -:  204:      }
        -:  205:    };
        -:  206:
        -:  207:_GLIBCXX_END_NAMESPACE_VERSION
        -:  208:} // namespace
        -:  209:
        -:  210:#endif
